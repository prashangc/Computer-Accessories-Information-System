/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AppliancesInfo;

import java.awt.Component;
import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.lang.System.Logger;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dell
 */
public class AppliancesInfo extends javax.swing.JFrame {

    /**
     * Creates new form AppliancesInfo
     */
    public AppliancesInfo() {

        initComponents();

//  Table.setValueAt(1, 0, 0);
//        Table.setValueAt(2, 1, 0);
//        Table.setValueAt(3, 2, 0);
        Table.setValueAt(4, 3, 0);
        Table.setValueAt(5, 4, 0);
        Table.setValueAt(6, 5, 0);
        Table.setValueAt(7, 6, 0);
        Table.setValueAt(8, 7, 0);
        Table.setValueAt(9, 8, 0);
        Table.setValueAt(10, 9, 0);
        Table.setValueAt(11, 10, 0);
        Table.setValueAt(12, 11, 0);
//  Table.setValueAt(5000, 0, 3);
//        Table.setValueAt(30000, 1, 3);
//        Table.setValueAt(2500, 2, 3);
        Table.setValueAt(4500, 3, 3);
        Table.setValueAt(3500, 4, 3);
        Table.setValueAt(5100, 5, 3);
        Table.setValueAt(27000, 6, 3);
        Table.setValueAt(1700, 7, 3);
        Table.setValueAt(3000, 8, 3);
        Table.setValueAt(1000, 9, 3);
        Table.setValueAt(500, 10, 3);
        Table.setValueAt(2000, 11, 3);
// Table.setValueAt("External Hard Drives", 0, 1);
//        Table.setValueAt("DIY Desktop Parts", 1, 1);
//        Table.setValueAt("Modems", 2, 1);
        Table.setValueAt("Internal Hard Drives", 3, 1);
        Table.setValueAt("Keyboards", 4, 1);
        Table.setValueAt("Routers", 5, 1);
        Table.setValueAt("Monitors", 6, 1);
        Table.setValueAt("Network Switches", 7, 1);
        Table.setValueAt("Flash Drives", 8, 1);
        Table.setValueAt("Mouse", 9, 1);
        Table.setValueAt("Wireless USB Adapter", 10, 1);
        Table.setValueAt("PC Audio", 11, 1);
// Table.setValueAt("Cash", 0, 2);
//        Table.setValueAt("Cheque", 1, 2);
//        Table.setValueAt("Cash", 2, 2);
        Table.setValueAt("Cheque", 3, 2);
        Table.setValueAt("Cash", 4, 2);
        Table.setValueAt("Cash", 5, 2);
        Table.setValueAt("Cheque", 6, 2);
        Table.setValueAt("Cash", 7, 2);
        Table.setValueAt("Cheque", 8, 2);
        Table.setValueAt("Cash", 9, 2);
        Table.setValueAt("Cheque", 10, 2);
        Table.setValueAt("Cash", 11, 2);
//Table.setValueAt("HP", 0, 4);
//        Table.setValueAt("Apple", 1, 4);
//        Table.setValueAt("TP Link", 2, 4);
        Table.setValueAt("Dell", 3, 4);
        Table.setValueAt("Lenovo", 4, 4);
        Table.setValueAt("TP Link", 5, 4);
        Table.setValueAt("Apple", 6, 4);
        Table.setValueAt("TP Link", 7, 4);
        Table.setValueAt("Dell", 8, 4);
        Table.setValueAt("Lenovo", 9, 4);
        Table.setValueAt("TP Link", 10, 4);
        Table.setValueAt("Lenovo", 11, 4);
//Table.setValueAt("Storage Components", 0, 5);
//        Table.setValueAt("Hardware Components", 1, 5);
//        Table.setValueAt("Network Components", 2, 5);
        Table.setValueAt("Storage Components", 3, 5);
        Table.setValueAt("Hardware Components", 4, 5);
        Table.setValueAt("Network Components", 5, 5);
        Table.setValueAt("Hardware Components", 6, 5);
        Table.setValueAt("Network Components", 7, 5);
        Table.setValueAt("Storage Components", 8, 5);
        Table.setValueAt("Hardware Components", 9, 5);
        Table.setValueAt("Network Components", 10, 5);
        Table.setValueAt("Hardware Components", 11, 5);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        accessoryID_jlabel = new javax.swing.JLabel();
        accessoryID_textfield = new javax.swing.JTextField();
        accessoryName_jlabel = new javax.swing.JLabel();
        accessoryName_textfield = new javax.swing.JTextField();
        price_jlabel = new javax.swing.JLabel();
        brand_jlabel = new javax.swing.JLabel();
        price_textfield = new javax.swing.JTextField();
        paidVia_jlabel = new javax.swing.JLabel();
        cash_radiobutton = new javax.swing.JRadioButton();
        cheque_radiobutton = new javax.swing.JRadioButton();
        category_jlabel = new javax.swing.JLabel();
        category_jcombobox = new javax.swing.JComboBox<>();
        add_button = new javax.swing.JButton();
        clear_button = new javax.swing.JButton();
        searchPrice_textfield = new javax.swing.JTextField();
        searchPrice_button = new javax.swing.JButton();
        searchCategory_button = new javax.swing.JButton();
        searchCategory_jcombobox = new javax.swing.JComboBox<>();
        brand_jcombobox = new javax.swing.JComboBox<>();
        update_button = new javax.swing.JButton();
        delete_button = new javax.swing.JButton();
        secondupdate_button = new javax.swing.JButton();
        jTextField0 = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jMenuBar2 = new javax.swing.JMenuBar();
        File_menu = new javax.swing.JMenu();
        open_jMenuItem = new javax.swing.JMenuItem();
        exit_MenuItem = new javax.swing.JMenuItem();
        Help_menu = new javax.swing.JMenu();
        help_MenuItem = new javax.swing.JMenuItem();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenu5.setText("jMenu5");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        accessoryID_jlabel.setText("Accessory ID");

        accessoryID_textfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                accessoryID_textfieldKeyPressed(evt);
            }
        });

        accessoryName_jlabel.setText("Accessory Name");

        accessoryName_textfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accessoryName_textfieldActionPerformed(evt);
            }
        });

        price_jlabel.setText("Price");

        brand_jlabel.setText("Brand");

        price_textfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                price_textfieldActionPerformed(evt);
            }
        });
        price_textfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                price_textfieldKeyPressed(evt);
            }
        });

        paidVia_jlabel.setText("Paid Via");

        buttonGroup1.add(cash_radiobutton);
        cash_radiobutton.setText("Cash");
        cash_radiobutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cash_radiobuttonActionPerformed(evt);
            }
        });

        buttonGroup1.add(cheque_radiobutton);
        cheque_radiobutton.setText("Cheque");
        cheque_radiobutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cheque_radiobuttonActionPerformed(evt);
            }
        });

        category_jlabel.setText("Category");

        category_jcombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--SELECT--", "Network Components", "Hardware Components", "Storage Components" }));

        add_button.setBackground(new java.awt.Color(204, 255, 204));
        add_button.setText("ADD");
        add_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_buttonActionPerformed(evt);
            }
        });

        clear_button.setBackground(new java.awt.Color(204, 255, 204));
        clear_button.setText("Clear");
        clear_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_buttonActionPerformed(evt);
            }
        });

        searchPrice_textfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchPrice_textfieldActionPerformed(evt);
            }
        });
        searchPrice_textfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchPrice_textfieldKeyPressed(evt);
            }
        });

        searchPrice_button.setBackground(new java.awt.Color(204, 255, 204));
        searchPrice_button.setText("Search By Price");
        searchPrice_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchPrice_buttonActionPerformed(evt);
            }
        });

        searchCategory_button.setBackground(new java.awt.Color(204, 255, 204));
        searchCategory_button.setText("Search By Category");
        searchCategory_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchCategory_buttonActionPerformed(evt);
            }
        });

        searchCategory_jcombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--SELECT--", "Network Components", "Hardware Components", "Storage Components" }));

        brand_jcombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--SELECT--", "Apple", "Dell", "TP Link", "HP", "Lenovo" }));
        brand_jcombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brand_jcomboboxActionPerformed(evt);
            }
        });

        update_button.setBackground(new java.awt.Color(204, 255, 204));
        update_button.setText("Update Table");
        update_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_buttonActionPerformed(evt);
            }
        });

        delete_button.setBackground(new java.awt.Color(204, 255, 204));
        delete_button.setText("Delete Rows");
        delete_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_buttonActionPerformed(evt);
            }
        });

        secondupdate_button.setBackground(new java.awt.Color(204, 255, 204));
        secondupdate_button.setText("Update");
        secondupdate_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secondupdate_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(paidVia_jlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(cash_radiobutton)
                                .addGap(18, 18, 18)
                                .addComponent(cheque_radiobutton))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(accessoryName_jlabel)
                                    .addGap(47, 47, 47)
                                    .addComponent(accessoryName_textfield))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(accessoryID_jlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(53, 53, 53)
                                    .addComponent(accessoryID_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(36, 36, 36)
                                    .addComponent(price_jlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(brand_jlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(category_jlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(price_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(brand_jcombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(category_jcombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(add_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(clear_button)
                        .addGap(145, 145, 145)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(searchCategory_jcombobox, 0, 122, Short.MAX_VALUE)
                            .addComponent(searchPrice_textfield))
                        .addGap(68, 68, 68)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(searchPrice_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(searchCategory_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(38, 38, 38))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(secondupdate_button, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(update_button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                                .addComponent(delete_button)
                                .addGap(57, 57, 57))))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(price_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(price_jlabel)
                            .addComponent(accessoryID_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(accessoryID_jlabel)
                            .addComponent(searchPrice_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchPrice_button))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(searchCategory_jcombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(searchCategory_button))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(accessoryName_jlabel)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(brand_jcombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(brand_jlabel)
                            .addComponent(accessoryName_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(delete_button)
                        .addGap(6, 6, 6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(update_button)
                            .addComponent(category_jcombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cash_radiobutton)
                            .addComponent(cheque_radiobutton)
                            .addComponent(paidVia_jlabel)
                            .addComponent(category_jlabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(secondupdate_button)
                        .addGap(23, 23, 23))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clear_button)
                            .addComponent(add_button))
                        .addContainerGap())))
        );

        jTextField0.setBackground(new java.awt.Color(204, 255, 204));
        jTextField0.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jTextField0.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField0.setText("Computer Accessories IS");
        jTextField0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField0ActionPerformed(evt);
            }
        });

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", "", "", "", "", ""},
                {"", "", "", "", "", ""},
                {"", "", "", "", "", ""},
                {"", "", "", "", "", ""},
                {"", "", "", "", "", ""},
                {"", "", "", "", "", " "},
                {"", "", "", "", "", ""},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Accessory ID", "Accessory Name", "Paid Via", "Price", "Brand", "Category"
            }
        ));
        Table.setToolTipText("");
        jScrollPane4.setViewportView(Table);
        if (Table.getColumnModel().getColumnCount() > 0) {
            Table.getColumnModel().getColumn(0).setResizable(false);
            Table.getColumnModel().getColumn(1).setResizable(false);
            Table.getColumnModel().getColumn(2).setResizable(false);
            Table.getColumnModel().getColumn(3).setResizable(false);
            Table.getColumnModel().getColumn(4).setResizable(false);
            Table.getColumnModel().getColumn(5).setResizable(false);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextField0)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTextField0, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jMenuBar2.setBackground(new java.awt.Color(204, 204, 255));

        File_menu.setText("File");

        open_jMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        open_jMenuItem.setText("Open");
        open_jMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                open_jMenuItemActionPerformed(evt);
            }
        });
        File_menu.add(open_jMenuItem);

        exit_MenuItem.setText("Exit");
        exit_MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_MenuItemActionPerformed(evt);
            }
        });
        File_menu.add(exit_MenuItem);

        jMenuBar2.add(File_menu);

        Help_menu.setText("Help");
        Help_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Help_menuActionPerformed(evt);
            }
        });

        help_MenuItem.setText("Help");
        help_MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                help_MenuItemActionPerformed(evt);
            }
        });
        Help_menu.add(help_MenuItem);

        jMenuBar2.add(Help_menu);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField0ActionPerformed

    private void searchCategory_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchCategory_buttonActionPerformed
        String categorySearch = (String) (searchCategory_jcombobox.getSelectedItem());
        int categoryCount = 0;
        String item = "";
        if (searchCategory_jcombobox.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "PLEASE SELECT A CATEGORY !!!", "Message", JOptionPane.WARNING_MESSAGE);

        } else {

            DefaultTableModel model = (DefaultTableModel) Table.getModel();
            int row = model.getRowCount();
            for (int i = 0; i < row; i++) {
                String category_result = Table.getValueAt(i, 5).toString();
                if (category_result.equals(categorySearch)) {
                    categoryCount++;
                    item = item + "\n" + "Accessory ID: " + Table.getValueAt(i, 0) + "\nAccessory Name: " + Table.getValueAt(i, 1) + "\nPrice:" + Table.getValueAt(i, 3) + "\nBrand: " + Table.getValueAt(i, 4) + "\nCategory: " + Table.getValueAt(i, 5) + "\n";
                }
            }
            if (categoryCount == 0) {

                JOptionPane.showMessageDialog(null, "NO ANY ITEM OF " + categorySearch + " CATEGORY IS FOUND.");
            } else {
                JOptionPane.showMessageDialog(null, categoryCount + " ACCESSORIES F0UND OF " + categorySearch);
                JOptionPane.showMessageDialog(null, "DETAILS OF THE ACCESSORIES" + "\n" + item + "\n");
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_searchCategory_buttonActionPerformed

    private void searchPrice_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchPrice_buttonActionPerformed

        try {
            int rowCount = Table.getRowCount();
            int columnCount = Table.getColumnCount();
            boolean empty = false;
            int Index = 3;
            String search_array[] = new String[Table.getRowCount()];
            for (int i = 0; i < Table.getRowCount(); i++) {//rows //columns   
                search_array[i] = ((Table.getValueAt(i, 3).toString()));

            }
            int[] numbers = new int[search_array.length];
            for (int i = 0; i < search_array.length; i++) {

                numbers[i] = Integer.parseInt(search_array[i]);

            }
            MergeSorter.sort(numbers);

            int priceSearch = Integer.parseInt(searchPrice_textfield.getText());

            if (searchPrice_textfield.getText() != "") {
                int rows = 0;
                for (int i = 0; i < rowCount; i++) {
                    if ((Table.getValueAt(i, Index)) == null) {
                        break;
                    }
                    rows++;
                }
                if (!"".equals(priceSearch) && rows != 0) {

                    int start = 0;
                    int end = numbers.length - 1;

                    int Result = BinarySearch.binarySearch(numbers, priceSearch);
                    //int Result=Arrays.binarySearch(sortedPrice, priceSearch);

                    //DefaultTableModel table= (DefaultTableModel) Table.getModel();
                    if (Result != -1) {

                        for (int i = 0; i < Table.getRowCount(); i++) {

                            if (Integer.parseInt(Table.getValueAt(i, Index).toString()) == Result) {
                                String accessory_id = Table.getValueAt(i, 0).toString();
                                String accessory_name = Table.getValueAt(i, 1).toString();
                                String paid_via = Table.getValueAt(i, 2).toString();
                                String price = Table.getValueAt(i, 3).toString();
                                String brand = Table.getValueAt(i, 4).toString();
                                String category = Table.getValueAt(i, 5).toString();

                                JOptionPane.showMessageDialog(rootPane, "Details\n" + "\n Accessory Name: " + accessory_name + "\nAccessory ID: " + accessory_id + "\nBrand: " + brand + "\nItem price: " + price + "\ncategory: " + category, "Message", JOptionPane.INFORMATION_MESSAGE);
                                break;
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "SORRY! NO ANY ACCESSORY OF PRICE Rs. " + searchPrice_textfield.getText() + " is found.", "Message", JOptionPane.WARNING_MESSAGE);
                    }
                }
            }
        } catch (Exception g) {
            if (searchPrice_textfield.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "PLEASE FILL THE PRICE OF THE ACCESSORY.", "Message", JOptionPane.WARNING_MESSAGE);
                searchPrice_textfield.grabFocus();
            } else {
                JOptionPane.showMessageDialog(rootPane, "PLEASE FILL ALL THE ROWS.", "Message", JOptionPane.WARNING_MESSAGE);
            }
        }

    }//GEN-LAST:event_searchPrice_buttonActionPerformed

    private void cash_radiobuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cash_radiobuttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cash_radiobuttonActionPerformed

    private void price_textfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_price_textfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_price_textfieldActionPerformed

    private void add_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_buttonActionPerformed

        String accessory_id = accessoryID_textfield.getText();
        String accessory_name = accessoryName_textfield.getText();
        String price = price_textfield.getText();
        String brand = brand_jcombobox.getSelectedItem().toString();
        String category = category_jcombobox.getSelectedItem().toString();

        String paid_via = "";
        if (cash_radiobutton.isSelected()) {
            paid_via = paid_via.concat(cash_radiobutton.getText());
        }
        if (cheque_radiobutton.isSelected()) {
            paid_via = paid_via.concat(cheque_radiobutton.getText());
        }

        Component jButton1ActionPerformed = null;
        if (!accessory_id.isEmpty()) {

            if (!accessory_name.isEmpty()) {

                if (!paid_via.isEmpty()) {

                    if (!price.isEmpty()) {

                        if (brand_jcombobox.getSelectedIndex() != 0) {

                            if (category_jcombobox.getSelectedIndex() != 0) {

                            } else {
                                JOptionPane.showMessageDialog(null, "Please select the category of the item.");

                            }
                        } else {
                            JOptionPane.showMessageDialog(jButton1ActionPerformed, "Please select the brand of the item.");
                        }

                    } else {
                        JOptionPane.showMessageDialog(jButton1ActionPerformed, "Please enter the price of the item.");
                        price_textfield.grabFocus();

                    }

                } else {

                    JOptionPane.showMessageDialog(jButton1ActionPerformed, "Please enter the payment method.");

                }

            } else {
                JOptionPane.showMessageDialog(jButton1ActionPerformed, "Please enter the name of the item.");
                accessoryName_textfield.grabFocus();

            }

        } else {
            JOptionPane.showMessageDialog(jButton1ActionPerformed, "Please enter the accesory ID of the item.");
            accessoryID_textfield.grabFocus();
        }

        String details[] = {accessory_id, accessory_name, paid_via, price, brand, category};

        String value;
        int nextRow = 0;
        int rowCount = Table.getRowCount();
        int columnCount = Table.getColumnCount();
        boolean empty = false;

        try {
            do {
                value = (String) Table.getValueAt(nextRow, 0);

                if (value != null && value.length() != 0) {
                    nextRow++;
                } else {
                    empty = true;
                }
            } while (nextRow < rowCount && !empty);
            if (brand_jcombobox.getSelectedIndex() != 0 && category_jcombobox.getSelectedIndex() != 0) {
                for (int i = 0; i < columnCount; i++) {
                    Table.setValueAt(details[i], nextRow, i);

                }
                JOptionPane.showMessageDialog(jButton1ActionPerformed, "Added to cart.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(jButton1ActionPerformed, "Rows Full");
        }
    }//GEN-LAST:event_add_buttonActionPerformed

    private void brand_jcomboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brand_jcomboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_brand_jcomboboxActionPerformed

    private void exit_MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_MenuItemActionPerformed
        dispose();     // TODO add your handling code here:
    }//GEN-LAST:event_exit_MenuItemActionPerformed

    private void delete_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_buttonActionPerformed
        DefaultTableModel model = (DefaultTableModel) this.Table.getModel();
        int[] rows = Table.getSelectedRows();
        for (int i = 0; i < rows.length; i++) {
            model.removeRow(rows[i] - i);
        }
        JOptionPane.showMessageDialog(rootPane, "Row Deleted.");// TODO add your handling code here:
    }//GEN-LAST:event_delete_buttonActionPerformed

    private void price_textfieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_price_textfieldKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            price_textfield.setEditable(false);
        } else {
            price_textfield.setEditable(true);
        }


    }//GEN-LAST:event_price_textfieldKeyPressed

    private void accessoryID_textfieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_accessoryID_textfieldKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            accessoryID_textfield.setEditable(false);
        } else {
            accessoryID_textfield.setEditable(true);
        }
    }//GEN-LAST:event_accessoryID_textfieldKeyPressed

    private void searchPrice_textfieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchPrice_textfieldKeyPressed
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            searchPrice_textfield.setEditable(false);
        } else {
            searchPrice_textfield.setEditable(true);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_searchPrice_textfieldKeyPressed

    private void update_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_buttonActionPerformed

        int selectedRow = Table.getSelectedRow();

        if (selectedRow >= 0) {
            DefaultTableModel model = (DefaultTableModel) Table.getModel();

            accessoryID_textfield.setText(model.getValueAt(selectedRow, 0).toString());
            accessoryName_textfield.setText(model.getValueAt(selectedRow, 1).toString());
            price_textfield.setText(model.getValueAt(selectedRow, 3).toString());

            if (model.getValueAt(selectedRow, 2).toString().equals("Cash")) {
                cash_radiobutton.setSelected(true);
            }
            if (model.getValueAt(selectedRow, 2).toString().equals("Cheque")) {
                cheque_radiobutton.setSelected(true);
            }

            if (model.getValueAt(selectedRow, 4).toString().equals("Apple")) {
                brand_jcombobox.setSelectedItem("Apple");
            }
            if (model.getValueAt(selectedRow, 4).toString().equals("Dell")) {
                brand_jcombobox.setSelectedItem("Dell");
            }
            if (model.getValueAt(selectedRow, 4).toString().equals("Acer")) {
                brand_jcombobox.setSelectedItem("Acer");
            }
            if (model.getValueAt(selectedRow, 4).toString().equals("HP")) {
                brand_jcombobox.setSelectedItem("HP");
            }
            if (model.getValueAt(selectedRow, 4).toString().equals("Lenovo")) {
                brand_jcombobox.setSelectedItem("Lenovo");
            }

            if (model.getValueAt(selectedRow, 5).toString().equals("Network Components")) {
                category_jcombobox.setSelectedItem("Network Components");
            }
            if (model.getValueAt(selectedRow, 5).toString().equals("Hardware Components")) {
                category_jcombobox.setSelectedItem("Hardware Components");
            }

            if (model.getValueAt(selectedRow, 5).toString().equals("Storage Components")) {
                category_jcombobox.setSelectedItem("Storage Components");
            }
            JOptionPane.showMessageDialog(rootPane, "Table Updated.");
        } else {
            JOptionPane.showMessageDialog(rootPane, "PLEASE SELECT A ROW TO UPDATE");
        }

    }//GEN-LAST:event_update_buttonActionPerformed

    private void accessoryName_textfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accessoryName_textfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_accessoryName_textfieldActionPerformed

    private void searchPrice_textfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchPrice_textfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchPrice_textfieldActionPerformed

    private void Help_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Help_menuActionPerformed

    }//GEN-LAST:event_Help_menuActionPerformed

    private void help_MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_help_MenuItemActionPerformed
        File file = new File("src/AppliancesInfo/userManual.pdf");
        try {
            Desktop.getDesktop().open(file);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "File not found");
        }
    }//GEN-LAST:event_help_MenuItemActionPerformed

    private void open_jMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_open_jMenuItemActionPerformed

        String filePath = "src/AppliancesInfo/data.txt";

        try {
            BufferedReader br = new BufferedReader(new FileReader(filePath));
            String firstLine = br.readLine();
            DefaultTableModel model = (DefaultTableModel) Table.getModel();
            Object[] tableLines = br.lines().toArray();

            for (int i = 0; i < tableLines.length; i++) {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split(", ");
                model.addRow(dataRow);

            }

            JOptionPane.showMessageDialog(rootPane, "Opened Successfully.");

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "File Not found.");

        }

    }//GEN-LAST:event_open_jMenuItemActionPerformed

    private void cheque_radiobuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cheque_radiobuttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cheque_radiobuttonActionPerformed

    private void secondupdate_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secondupdate_buttonActionPerformed
        int i = Table.getSelectedRow();
        DefaultTableModel model1 = (DefaultTableModel) Table.getModel();
        if (i >= 0) {

            model1.setValueAt(accessoryID_textfield.getText(), i, 0);
            model1.setValueAt(accessoryName_textfield.getText(), i, 1);
            model1.setValueAt(price_textfield.getText(), i, 3);
            if (cash_radiobutton.isSelected()) {
                model1.setValueAt(cash_radiobutton.getText(), i, 2);
            }
            if (cheque_radiobutton.isSelected()) {
                model1.setValueAt(cheque_radiobutton.getText(), i, 2);
            }
            model1.setValueAt(brand_jcombobox.getSelectedItem().toString(), i, 4);
            model1.setValueAt(category_jcombobox.getSelectedItem().toString(), i, 5);

            JOptionPane.showMessageDialog(rootPane, "UPDATED SUCCESSFULLY");

        } else {
            JOptionPane.showMessageDialog(null, "PLEASE SELECT A ROW TO UPDATE");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_secondupdate_buttonActionPerformed

    private void clear_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_buttonActionPerformed
        accessoryID_textfield.setText(null);
        accessoryName_textfield.setText(null);
        price_textfield.setText(null);
        buttonGroup1.clearSelection();
        brand_jcombobox.setSelectedIndex(0);
        category_jcombobox.setSelectedIndex(0);

    }//GEN-LAST:event_clear_buttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppliancesInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppliancesInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppliancesInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppliancesInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AppliancesInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu File_menu;
    private javax.swing.JMenu Help_menu;
    private javax.swing.JTable Table;
    private javax.swing.JLabel accessoryID_jlabel;
    private javax.swing.JTextField accessoryID_textfield;
    private javax.swing.JLabel accessoryName_jlabel;
    private javax.swing.JTextField accessoryName_textfield;
    private javax.swing.JButton add_button;
    private javax.swing.JComboBox<String> brand_jcombobox;
    private javax.swing.JLabel brand_jlabel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton cash_radiobutton;
    private javax.swing.JComboBox<String> category_jcombobox;
    private javax.swing.JLabel category_jlabel;
    private javax.swing.JRadioButton cheque_radiobutton;
    private javax.swing.JButton clear_button;
    private javax.swing.JButton delete_button;
    private javax.swing.JMenuItem exit_MenuItem;
    private javax.swing.JMenuItem help_MenuItem;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jTextField0;
    private javax.swing.JMenuItem open_jMenuItem;
    private javax.swing.JLabel paidVia_jlabel;
    private javax.swing.JLabel price_jlabel;
    private javax.swing.JTextField price_textfield;
    private javax.swing.JButton searchCategory_button;
    private javax.swing.JComboBox<String> searchCategory_jcombobox;
    private javax.swing.JButton searchPrice_button;
    private javax.swing.JTextField searchPrice_textfield;
    private javax.swing.JButton secondupdate_button;
    private javax.swing.JButton update_button;
    // End of variables declaration//GEN-END:variables
}
